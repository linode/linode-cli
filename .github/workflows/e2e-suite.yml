name: Integration Tests
on:
  workflow_dispatch: null
  push:
    branches:
      - main
      - dev
jobs:
  integration-tests:
    name: Run integration tests
    runs-on: ubuntu-latest
    env:
      EXIT_STATUS: 0
    steps:
      - name: Clone Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Update system packages
        run: sudo apt-get update -y

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python dependencies and update cert
        run: |
          pip install wheel boto3 && \
          pip install certifi -U && \
          pip install .[obj,dev]

      - name: Download kubectl and calicoctl for LKE clusters
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          curl -LO "https://github.com/projectcalico/calico/releases/download/v3.25.0/calicoctl-linux-amd64"
          chmod +x calicoctl-linux-amd64 kubectl
          mv calicoctl-linux-amd64 /usr/local/bin/calicoctl
          mv kubectl /usr/local/bin/kubectl

      - name: Install Package
        run: make install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run the integration test suite
        run: |
          timestamp=$(date +'%Y%m%d%H%M')
          report_filename="${timestamp}_cli_test_report.xml"
          make testint TEST_ARGS="--junitxml=${report_filename}"
        env:
          LINODE_CLI_TOKEN: ${{ secrets.LINODE_TOKEN }}

      - name: Apply Calico Rules to LKE
        if: always()
        run: |
          cd scripts && ./lke_calico_rules_e2e.sh
        env:
          LINODE_TOKEN: ${{ secrets.LINODE_TOKEN }}

      - name: Upload test results
        if: always()
        run: |
          filename=$(ls | grep -E '^[0-9]{12}_cli_test_report\.xml$')
          python tod_scripts/add_to_xml_test_report.py \
          --branch_name "${GITHUB_REF#refs/*/}" \
          --gha_run_id "$GITHUB_RUN_ID" \
          --gha_run_number "$GITHUB_RUN_NUMBER" \
          --xmlfile "${filename}"
          sync
          python tod_scripts/test_report_upload_script.py "${filename}"
        env:
          LINODE_CLI_OBJ_ACCESS_KEY: ${{ secrets.LINODE_CLI_OBJ_ACCESS_KEY }}
          LINODE_CLI_OBJ_SECRET_KEY: ${{ secrets.LINODE_CLI_OBJ_SECRET_KEY }}