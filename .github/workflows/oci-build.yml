name: OCI Image Publish
on:
  workflow_dispatch: null
  release:
    types: [ published ]
jobs:
  oci_publish:
    name: Build and publish the OCI image
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v3

      - name: setup python 3
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # pin@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325 # pin@v2

      - name: Login to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # pin@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # This is necessary as we want to ensure that version tags
      # are properly formatted before passing them into the
      # DockerFile.
      - name: Get CLI version
        run: |
          export CLI_VERSION=$(./version)
          echo "CLI_VERSION=$CLI_VERSION" >> $GITHUB_OUTPUT
        env:
          LINODE_CLI_VERSION: ${{ github.event.release.tag_name }}
        id: cli_version

      - name: Build and push to DockerHub
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5 # pin@v3
        with:
          context: .
          file: Dockerfile-release
          platforms: linux/amd64,linux/arm64
          push: true
          tags: linode/cli:${{ steps.cli_version.outputs.CLI_VERSION }},linode/cli:latest
          build-args: |
            linode_cli_version=${{ steps.cli_version.outputs.CLI_VERSION }}
            github_token=${{ secrets.GITHUB_TOKEN }}
